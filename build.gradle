plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.wumboos.app'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

ext {
	set('springModulithVersion', "1.1.0")
	set('springBootStarterVersion', "3.2.0")
	set('openapiStarterWebflux', "2.0.2")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootStarterVersion}"
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
	}
}

dependencies {
    implementation 'org.springframework.modulith:spring-modulith-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-docker-compose'
    implementation 'org.postgresql:postgresql'
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'com.h2database:h2'
    implementation 'io.r2dbc:r2dbc-h2'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${openapiStarterWebflux}"
    //implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
}



tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
   jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"   
}

tasks.register("bootRunH2Dev") {
    group = "application"
    description = "Runs the Spring Boot application with the h2 database dev profile"
    finalizedBy("bootRun")
}


tasks.register("bootRunDockerPostgreDev") {
    group = "application"
    description = "Runs the Spring Boot application with the postgre database docker container dev profile"
    doFirst {
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "postgre,docker-compose")
        }
    }
    finalizedBy("bootRun")
}
